#!/bin/sh
# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# ================================================================ 
#                                                                  
# Licensed Materials - Property of IBM                             
# Blue Gene/Q                                                      
# (C) Copyright IBM Corp. 2012 All Rights Reserved                 
# US Government Users Restricted Rights - Use,                     
# duplication or disclosure restricted by GSA ADP                  
# Schedule contract with IBM Corp.                                 
#                                                                  
# This software is available to you under the                      
# GNU General Public License (GPL).                                
#                                                                  
# ================================================================ 
#                                                                  
# end_generated_IBM_copyright_prolog                               

. /proc/personality.sh

export PATH=/bin.rd/:$PATH
Program=`which $2`
if [ $# -ge 3 ] && [ $1 -gt 0 ] && [ -x "$Program" ]; then
	# Set CPU affinity to keep this process off core 0 so that 
	# it doesn't prevent/delay interrupts.
	taskset -pc 1-3 $$ > /dev/null

	let Group=0
	let GroupSize=$1
	if [ $BG_IP_OVER_COL -eq "1" ]; then
		let MyGroup=$(($BG_PSETNUM*$BG_NODESINPSET+$BG_RANK_IN_PSET))/$GroupSize
		let NumGroups=$(($BG_NUMPSETS*$BG_NODESINPSET+$BG_NUMPSETS))/$GroupSize
		if [ $(($(($BG_NUMPSETS*$BG_NODESINPSET+$BG_NUMPSETS))%$GroupSize)) -gt 0 ]; then
			let NumGroups=$NumGroups+1
		fi
	else
		let MyGroup=$BG_PSETNUM/$GroupSize
		let NumGroups=$BG_NUMPSETS/$GroupSize
	fi
	let BarrierTimeout=100
	let MaxBarrierAttempts=3000

	# Wait for our turn.
	while [ $Group -lt $MyGroup ]; do
        	echo $BarrierTimeout > /proc/bgpnet/barrier
	        let Attempt=0
        	until [ $(cat /proc/bgpnet/barrier) -eq "0" ]; do
                	let Attempt=$Attempt+1
	                if [ $Attempt -gt $MaxBarrierAttempts ]; then
        	                echo "Node $(($BG_PSETNUM*$BG_NODESINPSET+$BG_RANK_IN_PSET)) barrier1 failure in $0."
                	        bgras 1 0x22 2 "Barrier1 failure in $0.  MyGroup=$MyGroup, Group=$Group"
                        	echo 0 > /proc/bgpnet/barrier
	                        exit
        	        fi
	        done
        	let Group=$Group+1
	done

	# Run the specified script.
	shift 1
	$* 

	# Allow other nodes to have a turn
	while [ $Group -lt $NumGroups ]; do
		echo $BarrierTimeout > /proc/bgpnet/barrier
		let Attempt=0
        	until [ $(cat /proc/bgpnet/barrier) -eq "0" ]; do
                	let Attempt=$Attempt+1
                	if [ $Attempt -gt $MaxBarrierAttempts ]; then
                        	echo "Barrier2 failure in $0.  MyGroup=$MyGroup, Group=$Group"
				bgras 1 0x22 2 "Barrier2 failure in $0.  MyGroup=$MyGroup, Group=$Group"
                        	echo 0 > /proc/bgpnet/barrier
                        	exit
                	fi
        	done
        	let Group=$Group+1
	done
else
	echo "Usage: $0 " '<scaling factor> <script>'
fi
